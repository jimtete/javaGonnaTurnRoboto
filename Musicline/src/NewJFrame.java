
import com.sun.javafx.scene.control.SelectedCellsMap;
import java.util.Hashtable;
import javax.swing.ButtonGroup;
import javax.swing.JLabel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on Nov 6, 2019, 10:37:30 AM
 */
/**
 *
 * @author user
 */
public class NewJFrame extends javax.swing.JFrame {
    
    /** Creates new form NewJFrame */
    boolean selected[] ={true,false,false};
    public NewJFrame() {
        initComponents();
        setupPresets();
        ButtonGroup bgroup = new ButtonGroup();
        bgroup.add(m0);
        bgroup.add(m1);
        bgroup.add(m2);
        m0.setSelected(true);
        
        
    }
    Presets pTable[] = new Presets[3];
    
    void setupPresets(){
        pTable[0]=new Presets(0, 0, 0, 0, 0);
        pTable[1]=new Presets(1, -1, 9, 0, 4);
        pTable[2] = new Presets(2, 4, -2, 4, 2);
    }
    
    void loadPresets(int b,int m,int t,int ba,int v){
        slBalance.setValue(b);
        slMidrange.setValue(m);
        slTremble.setValue(t);
        slBalance.setValue(ba);
        slVolume.setValue(v);
    }
    
    void storePresets(){
        for (int i=0;i<3;i++){
            if (selected[i]){
                pTable[i].bass=slBass.getValue();
                pTable[i].midrange=slMidrange.getValue();
                pTable[i].tremple=slTremble.getValue();
                pTable[i].balance=slBalance.getValue();
                pTable[i].volume=slVolume.getValue();
            }
        }
    }
    
    void showSliderValues(){
        int b=slBass.getValue();
        int m=slMidrange.getValue();
        int t=slTremble.getValue();
        int bl=slBalance.getValue();
        String bal;
        if (bl>0)
            bal="Right "+ String.valueOf(bl);
        else if (bl<0) bal="Left "+ String.valueOf(bl);
        else bal = "Center";
        int vol=slVolume.getValue();
        jLabel6.setText("<html>Bass: "+b+"<br/>Midrange: "+m+"<br/>Tremble: "+t+"<br/>Balance: "+bal+"<br/>Volume: "+vol);
    }
    
    Hashtable table = new Hashtable();
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lBass = new javax.swing.JLabel();
        lMidrange = new javax.swing.JLabel();
        lTremble = new javax.swing.JLabel();
        lBalance = new javax.swing.JLabel();
        lVolume = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        slBass = new javax.swing.JSlider();
        slMidrange = new javax.swing.JSlider();
        slTremble = new javax.swing.JSlider();
        slBalance = new javax.swing.JSlider();
        slVolume = new javax.swing.JSlider();
        m0 = new javax.swing.JRadioButton();
        m1 = new javax.swing.JRadioButton();
        m2 = new javax.swing.JRadioButton();
        bStore = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lBass.setText("Bass");
        getContentPane().add(lBass, new java.awt.GridBagConstraints());

        lMidrange.setText("Midrange");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(lMidrange, gridBagConstraints);

        lTremble.setText("Tremble");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(lTremble, gridBagConstraints);

        lBalance.setText("Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        getContentPane().add(lBalance, gridBagConstraints);

        lVolume.setText("Volume");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        getContentPane().add(lVolume, gridBagConstraints);

        jLabel6.setText("<html>Bass: 0<br/>Midrange: 0<br/>Tremble: 0<br/>Balance: Center<br/>Volume: 0</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 3;
        getContentPane().add(jLabel6, gridBagConstraints);

        slBass.setMajorTickSpacing(2);
        slBass.setMaximum(10);
        slBass.setMinimum(-10);
        slBass.setMinorTickSpacing(1);
        slBass.setPaintLabels(true);
        slBass.setPaintTicks(true);
        slBass.setValue(0);
        slBass.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slBassStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        getContentPane().add(slBass, gridBagConstraints);

        slMidrange.setMajorTickSpacing(2);
        slMidrange.setMaximum(10);
        slMidrange.setMinimum(-10);
        slMidrange.setMinorTickSpacing(1);
        slMidrange.setPaintLabels(true);
        slMidrange.setPaintTicks(true);
        slMidrange.setValue(0);
        slMidrange.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slMidrangeStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        getContentPane().add(slMidrange, gridBagConstraints);

        slTremble.setMajorTickSpacing(2);
        slTremble.setMaximum(10);
        slTremble.setMinimum(-10);
        slTremble.setMinorTickSpacing(1);
        slTremble.setPaintLabels(true);
        slTremble.setPaintTicks(true);
        slTremble.setValue(0);
        slTremble.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slTrembleStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        getContentPane().add(slTremble, gridBagConstraints);

        table.put(new Integer(0), new JLabel("Center"));
        table.put(new Integer(-5), new JLabel("L"));
        table.put(new Integer(5), new JLabel("R"));
        slBalance.setLabelTable(table);
        slBalance.setMajorTickSpacing(2);
        slBalance.setMaximum(5);
        slBalance.setMinimum(-5);
        slBalance.setMinorTickSpacing(1);
        slBalance.setPaintLabels(true);
        slBalance.setPaintTicks(true);
        slBalance.setValue(0);
        slBalance.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slBalanceStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        getContentPane().add(slBalance, gridBagConstraints);

        slVolume.setMajorTickSpacing(1);
        slVolume.setMaximum(10);
        slVolume.setPaintLabels(true);
        slVolume.setPaintTicks(true);
        slVolume.setValue(0);
        slVolume.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slVolumeStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        getContentPane().add(slVolume, gridBagConstraints);

        m0.setText("M0");
        m0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        getContentPane().add(m0, gridBagConstraints);

        m1.setText("M1");
        m1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        getContentPane().add(m1, gridBagConstraints);

        m2.setText("M2");
        m2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        getContentPane().add(m2, gridBagConstraints);

        bStore.setText("Store");
        bStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bStoreActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 3;
        getContentPane().add(bStore, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void m1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m1ActionPerformed
       loadPresets(pTable[1].bass, pTable[1].midrange, pTable[1].tremple, pTable[1].balance, pTable[1].volume); // TODO add your handling code here:
        selected[0]=false;
        selected[1]=true;
        selected[2]=false;
    }//GEN-LAST:event_m1ActionPerformed

    private void slBassStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slBassStateChanged
        showSliderValues();
    }//GEN-LAST:event_slBassStateChanged

    private void slMidrangeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slMidrangeStateChanged
        showSliderValues();// TODO add your handling code here:
    }//GEN-LAST:event_slMidrangeStateChanged

    private void slTrembleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slTrembleStateChanged
        showSliderValues();// TODO add your handling code here:
    }//GEN-LAST:event_slTrembleStateChanged

    private void slBalanceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slBalanceStateChanged
        showSliderValues();// TODO add your handling code here:
    }//GEN-LAST:event_slBalanceStateChanged

    private void slVolumeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slVolumeStateChanged
        showSliderValues();// TODO add your handling code here:
    }//GEN-LAST:event_slVolumeStateChanged

    private void m0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m0ActionPerformed
        loadPresets(pTable[0].bass, pTable[0].midrange, pTable[0].tremple, pTable[0].balance, pTable[0].volume);
        selected[2]=false;
        selected[0]=true;
        selected[1]=false;
    }//GEN-LAST:event_m0ActionPerformed

    private void m2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m2ActionPerformed
        loadPresets(pTable[2].bass, pTable[2].midrange, pTable[2].tremple, pTable[2].balance, pTable[2].volume);
        selected[0]=false;
        selected[2]=true;
        selected[1]=false;
    }//GEN-LAST:event_m2ActionPerformed

    private void bStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bStoreActionPerformed
        storePresets();
    }//GEN-LAST:event_bStoreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bStore;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lBalance;
    private javax.swing.JLabel lBass;
    private javax.swing.JLabel lMidrange;
    private javax.swing.JLabel lTremble;
    private javax.swing.JLabel lVolume;
    private javax.swing.JRadioButton m0;
    private javax.swing.JRadioButton m1;
    private javax.swing.JRadioButton m2;
    private javax.swing.JSlider slBalance;
    private javax.swing.JSlider slBass;
    private javax.swing.JSlider slMidrange;
    private javax.swing.JSlider slTremble;
    private javax.swing.JSlider slVolume;
    // End of variables declaration//GEN-END:variables
}
